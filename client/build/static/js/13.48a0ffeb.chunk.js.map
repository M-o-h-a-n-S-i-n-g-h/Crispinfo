{"version":3,"sources":["components/categoryLayout.js","components/Categories.js","apicalls/index.js"],"names":["Header4","styled","div","cardHeader","CategoryLayout","category","categoryTitle","name","className","to","_id","CateLayout","topHeaderFont","React","memo","useState","categories","setCategories","useEffect","getCategories","then","data","error","console","log","Helmet","UserNav","map","index","key","createPost","id","a","fields","fetch","method","headers","body","JSON","stringify","response","json","createCategory","getAllPosts","abortController","AbortController","signal","getPostById","updatePost","deletePost","getCategoryById","getCatePosts"],"mappings":"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","file":"static/js/13.48a0ffeb.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CategoryStyle, cardHeader } from \"../utils\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header4 = styled.div`\r\n  text-align: center;\r\n  font-weight: 500;\r\n  a {\r\n    color: white;\r\n    font-size: 27px;\r\n    text-decoration: none;\r\n    font-family: ${cardHeader};\r\n  }\r\n\r\n  a:hover {\r\n    text-decoration: none;\r\n    color: cyan;\r\n  }\r\n`;\r\n\r\nconst CategoryLayout = ({ category }) => {\r\n  const categoryTitle = category ? category.name : \"Category Title\";\r\n  return (\r\n    <Fragment>\r\n      <CategoryStyle>\r\n        <div className=\"gridcard\">\r\n          <Header4>\r\n            <Link to={`/category/${category._id}/posts`}>{categoryTitle}</Link>\r\n          </Header4>\r\n        </div>\r\n      </CategoryStyle>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CategoryLayout;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport UserNav from \"../Core/UserNav\";\r\nimport { getCategories } from \"../apicalls\";\r\nimport CategoryLayout from \"../components/categoryLayout\";\r\nimport styled from \"styled-components\";\r\nimport { topHeaderFont } from \"../utils\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst CateLayout = styled.div`\r\n  h1 {\r\n    font-family: ${topHeaderFont};\r\n    color: white;\r\n    padding: 1rem;\r\n    text-align: center;\r\n  }\r\n\r\n  .grid-container {\r\n    width: 80%;\r\n    margin: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(1fr, auto);\r\n    gap: 2em;\r\n    margin-bottom: 3em;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n      width: 90%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n  }\r\n`;\r\n\r\nconst Categories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const categoryLoad = () => {\r\n    getCategories().then((data) => {\r\n      if (data.error) {\r\n        console.log(\"Check for error\");\r\n      } else {\r\n        setCategories(data);\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    categoryLoad();\r\n  }, []);\r\n\r\n  //!STYLES\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>CrispInfo | Browse Categories</title>\r\n      </Helmet>\r\n      <UserNav />\r\n      <main>\r\n        <h1>Categories Page</h1>\r\n        <hr />\r\n        <CateLayout>\r\n          <div className=\"grid-container\">\r\n            {categories.map((category, index) => (\r\n              <div key={index}>\r\n                <CategoryLayout category={category} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CateLayout>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(Categories);\r\n","export const createPost = async ({ fields }, id) => {\r\n  try {\r\n    const response = await fetch(`/api/blog/${id}/create`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(fields),\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.log(error);\r\n  }\r\n};\r\n\r\nexport const createCategory = async (category) => {\r\n  try {\r\n    const response = await fetch(\"/api/category/create\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(category),\r\n    });\r\n    console.log(response);\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.log(error);\r\n  }\r\n};\r\n\r\nexport const getAllPosts = async () => {\r\n  try {\r\n    const response = await fetch(\"/api/blog\", {\r\n      method: \"GET\",\r\n    });\r\n    return response.json();\r\n  } catch (err) {\r\n    console.log(\"error :\", err);\r\n  }\r\n};\r\n\r\nexport const getCategories = async () => {\r\n  const abortController = new AbortController();\r\n  try {\r\n    const response = await fetch(\r\n      \"/api/allCategories\",\r\n      {\r\n        method: \"GET\",\r\n      },\r\n      { signal: abortController.signal }\r\n    );\r\n    return response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getPostById = async (id) => {\r\n  try {\r\n    const response = await fetch(`/api/blog/${id}`, {\r\n      method: \"GET\",\r\n    });\r\n    console.log(response);\r\n    return response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const updatePost = async ({ fields }, id) => {\r\n  try {\r\n    const response = await fetch(`/api/blog/update/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(fields),\r\n    });\r\n    console.log(response);\r\n    return response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const deletePost = async (id) => {\r\n  try {\r\n    const response = await fetch(`/api/blog/delete/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    return response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const getCategoryById = async (id) => {\r\n  try {\r\n    const response = await fetch(`/api/category/${id}`, {\r\n      method: \"GET\",\r\n    });\r\n    return response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const getCatePosts = async (id) => {\r\n  try {\r\n    const response = await fetch(`/api/category/${id}/posts`, {\r\n      method: \"GET\",\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"sourceRoot":""}