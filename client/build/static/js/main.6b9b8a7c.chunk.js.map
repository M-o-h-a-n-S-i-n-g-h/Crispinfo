{"version":3,"sources":["utils/typography.js","utils/index.js","auth/helper/index.js","Core/UserNav.js","utils/colors.js","utils/GlobalView.js","utils/SigninStyle.js","utils/SignupStyle.js","utils/PostsStyle.js","utils/Global.js","utils/CategoryStyle.js","utils/NavigationStyle.js","utils/HomePageStyle.js","components/customComponents/LoadingComponent.js","Core/About.js","Routes.js","serviceWorker.js","index.js"],"names":["topHeaderFont","cardHeader","paragraphFont","descFont","quoteFont","typeScale","header1","header2","header3","header4","header5","paragraph","cardHeading","navLinks","mobileSpan","mobileCardDescription","mobileCardHeader","mobileLogo","signup","user","a","fetch","method","headers","body","JSON","stringify","response","json","console","log","signin","signout","authenticate","data","next","undefined","window","Cookies","set","isAuthenticated","get","getJSON","withRouter","useState","loading","setLoading","history","useHistory","style","display","justifyContent","alignItems","handleActiveLinks","className","to","fontSize","onClick","activeClassName","size","color","role","remove","path","setTimeout","push","location","reload","then","clearTimeout","userNav","yellow","100","200","300","ViewDiv","styled","div","GlobalSignin","Form","form","Button","button","Label","label","GlobalSignup","PostStyle","Global","createGlobalStyle","CategoryStyle","GlobalNavbar","LoadingStyle","Loading","AboutDiv","About","Helmet","UserNav","Posts","React","lazy","Categories","ViewLayout","HomePage","CateBlog","AdminDashboard","Signin","Signup","ManagePosts","SelectCategory","AdminRoute","Createcategory","CreateBlog","UpdatePost","Routes","Suspense","fallback","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6b9b8a7c.chunk.js","sourcesContent":["export const logoFont = ' \"Pacifico\", cursive';\r\n\r\nexport const topHeaderFont = '\"Open Sans\", sans-serif';\r\n\r\nexport const cardHeader = '\"Recursive\", sans-serif';\r\n\r\nexport const paragraphFont = '\"DM Sans\", sans-serif';\r\n\r\nexport const descFont = '\"Titillium Web\", sans-serif';\r\n\r\nexport const quoteFont = '\"Nunito\", sans-serif';\r\n\r\nexport const typeScale = {\r\n  header1: \"4em\",\r\n  header2: \"3.2rem\",\r\n  header3: \"2.8rem\",\r\n  header4: \"1.2rem\",\r\n  header5: \"2.1rem\",\r\n  paragraph: \"1.3em\",\r\n  cardHeading: \"2.3em\",\r\n  navLinks: \"1.3rem\",\r\n  mobileSpan: \"2em\",\r\n  mobileCardDescription: \"1.3em\",\r\n  mobileCardHeader: \"1.8em\",\r\n  mobileLogo: \"1.1em\",\r\n};\r\n","export * from \"./colors\";\r\nexport * from \"./theme\";\r\nexport * from \"./typography\";\r\nexport * from \"./GlobalView\";\r\nexport * from \"./SigninStyle\";\r\nexport * from \"./SignupStyle\";\r\nexport * from \"./PostsStyle\";\r\nexport * from \"./Global\";\r\nexport * from \"./CategoryStyle\";\r\nexport * from \"./NavigationStyle\";\r\nexport * from \"./HomePageStyle\";\r\n","import Cookies from \"js-cookie\";\r\n\r\nexport const signup = async (user) => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/user/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const signin = async (user) => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/user/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const signout = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/user/logout\", {\r\n      method: \"GET\",\r\n    });\r\n    return response.json();\r\n  } catch (err) {\r\n    return console.log(err);\r\n  }\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n  if (typeof window !== undefined) {\r\n    Cookies.set(\"jwt\", data);\r\n    next();\r\n  }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  if (typeof window == undefined) {\r\n    return false;\r\n  }\r\n  if (Cookies.get(\"jwt\")) {\r\n    return Cookies.getJSON(\"jwt\");\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { NavLink, Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport styled from \"styled-components\";\r\nimport { signout, isAuthenticated } from \"../auth/helper\";\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\nimport { GlobalNavbar } from \"../utils\";\r\n\r\nconst UserNav = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  var history = useHistory();\r\n\r\n  const userNav = () => {\r\n    const signOutAndRedirect = () => {\r\n      Cookies.remove(\"jwt\", { path: \"/\" });\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n        window.location.reload();\r\n        signout().then((response) => {\r\n          console.log(\"Signed Out\");\r\n        });\r\n      }, 2000);\r\n      clearTimeout();\r\n    };\r\n\r\n    const style = {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      alignItems: \"center\",\r\n    };\r\n\r\n    const loadingMessage = () => {\r\n      return (\r\n        loading && (\r\n          <Fragment>\r\n            {\" \"}\r\n            <div style={style}>\r\n              <RotateSpinner size={45} color=\"#00ff89\" loading={true} />\r\n            </div>\r\n          </Fragment>\r\n        )\r\n      );\r\n    };\r\n\r\n    // const LinkActive = styled.div`\r\n    //   .current-link {\r\n    //     color: white;\r\n    //     border: solid 1px white;\r\n    //     background: green;\r\n    //   }\r\n    // `;\r\n\r\n    const handleActiveLinks = () => {};\r\n\r\n    return (\r\n      <div>\r\n        <GlobalNavbar>\r\n          <nav className=\"navi-bar\">\r\n            <h2>\r\n              <Link to=\"/\" className=\"logo\">\r\n                &rarr; <span style={{ fontSize: \"4rem\" }}> C</span> rispInfo\r\n                &larr;\r\n              </Link>\r\n            </h2>\r\n            <ul className=\"navi-navi-links\">\r\n              <li className=\"navi-links\">\r\n                <NavLink\r\n                  to=\"/allPosts\"\r\n                  onClick={handleActiveLinks}\r\n                  activeClassName=\"active\"\r\n                >\r\n                  Blog\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navi-links\">\r\n                <NavLink\r\n                  to=\"/categories\"\r\n                  onClick={handleActiveLinks}\r\n                  activeClassName=\"active\"\r\n                >\r\n                  Categories\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"navi-links\">\r\n                <NavLink\r\n                  to=\"/about\"\r\n                  onClick={handleActiveLinks}\r\n                  activeClassName=\"active\"\r\n                >\r\n                  About\r\n                </NavLink>\r\n              </li>\r\n              {loadingMessage()}\r\n              {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <li className=\"navi-links\">\r\n                  <Link to=\"/admin\">AdminSpace</Link>\r\n                </li>\r\n              )}\r\n\r\n              {isAuthenticated() && (\r\n                <li className=\" cta-signout\" onClick={signOutAndRedirect}>\r\n                  SIGNOUT\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </nav>\r\n        </GlobalNavbar>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{userNav()}</div>;\r\n};\r\nexport default withRouter(UserNav);\r\n\r\n// export default withRouter(UserNav);\r\n\r\n// import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import styled from \"styled-components\";\r\n// import { withStyles } from \"@material-ui/core/styles\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import Menu from \"@material-ui/core/Menu\";\r\n// import MenuItem from \"@material-ui/core/MenuItem\";\r\n// import ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\n// import DraftsIcon from \"@material-ui/icons/Drafts\";\r\n// import SendIcon from \"@material-ui/icons/Send\";\r\n\r\n// const StyledMenu = withStyles({\r\n//   paper: {\r\n//     border: \"1px solid #d3d4d5\",\r\n//   },\r\n// })((props) => (\r\n//   <Menu\r\n//     elevation={0}\r\n//     getContentAnchorEl={null}\r\n//     anchorOrigin={{\r\n//       vertical: \"bottom\",\r\n//       horizontal: \"center\",\r\n//     }}\r\n//     transformOrigin={{\r\n//       vertical: \"top\",\r\n//       horizontal: \"center\",\r\n//     }}\r\n//     {...props}\r\n//   />\r\n// ));\r\n\r\n// const StyledMenuItem = withStyles((theme) => ({\r\n//   root: {\r\n//     \"&:focus\": {\r\n//       \"backgroundColor\": theme.palette.primary.main,\r\n//       \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n//         color: theme.palette.common.white,\r\n//       },\r\n//     },\r\n//   },\r\n// }))(MenuItem);\r\n\r\n// export default function CustomizedMenus() {\r\n//   const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n//   const handleClick = (event) => {\r\n//     setAnchorEl(event.currentTarget);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const NavMenu = styled.div`\r\n//     @media only screen and(max-width:768px) {\r\n//       .nav-menu {\r\n//         display: none;\r\n//       }\r\n//     }\r\n//   `;\r\n\r\n//   return (\r\n//     <NavMenu>\r\n//       <Button\r\n//         className=\"nav-menu\"\r\n//         aria-controls=\"customized-menu\"\r\n//         aria-haspopup=\"true\"\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         onClick={handleClick}\r\n//       >\r\n//         Open Menu\r\n//       </Button>\r\n//       <StyledMenu\r\n//         id=\"customized-menu\"\r\n//         anchorEl={anchorEl}\r\n//         keepMounted\r\n//         open={Boolean(anchorEl)}\r\n//         onClose={handleClose}\r\n//       >\r\n//         <StyledMenuItem>\r\n//           <Link to=\"/\">\r\n//             <ListItemText primary=\"Home\" />\r\n//           </Link>\r\n//         </StyledMenuItem>\r\n//         <StyledMenuItem>\r\n//           <Link to=\"/allPosts\">\r\n//             <ListItemText primary=\"Blog\" />\r\n//           </Link>\r\n//         </StyledMenuItem>\r\n//         <StyledMenuItem>\r\n//           <Link>\r\n//             <ListItemText primary=\"Categories\" />\r\n//           </Link>\r\n//         </StyledMenuItem>\r\n//       </StyledMenu>\r\n//     </NavMenu>\r\n//   );\r\n// }\r\n","export const blue = {\r\n  100: \"#3a36e0\",\r\n  200: \"#0804b8\",\r\n  300: \"#030086\",\r\n  400: \"#5f25a4\",\r\n  500: \"#050449\",\r\n};\r\n\r\nexport const green = {\r\n  100: \"#529e66\",\r\n  200: \"#367b48\",\r\n  300: \"#276738\",\r\n};\r\n\r\nexport const yellow = {\r\n  100: \"#e1c542\",\r\n  200: \"#cab23f\",\r\n  300: \"#b49e35\",\r\n};\r\n\r\nexport const red = {\r\n  100: \"#d0454c\",\r\n  200: \"#b54248\",\r\n  300: \"#95353a\",\r\n};\r\n\r\nexport const neutral = {\r\n  100: \"#ffffff\",\r\n  200: \"#f4f5f7\",\r\n  300: \"#e1e1e1\",\r\n  400: \"#737581\",\r\n  500: \"#4a4b53\",\r\n  600: \"#000000\",\r\n};\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\nimport { topHeaderFont, paragraphFont, typeScale } from \"./typography\";\r\n\r\n// export const GlobalView = createGlobalStyle`\r\n\r\n//     body{\r\n//         background:#0D0C1D;\r\n//     }\r\n\r\n//     main{\r\n//         width:65%;\r\n//         margin:auto;\r\n//     }\r\n\r\n//     h1{\r\n//         font-family:${topHeaderFont};\r\n//         color:white;\r\n//     }\r\n\r\n//     header{\r\n//             width:100%;\r\n//         }\r\n\r\n//     h2{\r\n//         font-family: 'Recursive', sans-serif;\r\n//         font-size:${typeScale.header3};\r\n//         color:#f038ff;\r\n//     }\r\n\r\n//     span{\r\n//         font-family:${topHeaderFont};\r\n//         font-size:${typeScale.header1};\r\n//         color:#f7f7ff;\r\n//         display:flex;\r\n//         justify-content:center;\r\n//         align-items:center;\r\n//         margin-top:-5rem;\r\n//         margin-bottom:.5em;\r\n//     }\r\n\r\n//     p{\r\n//         font-family:${paragraphFont};\r\n//         color:white;\r\n//         font-size:${typeScale.paragraph};\r\n//         font-weight:600;\r\n//     }\r\n\r\n//     blockquote{\r\n//         border-left: 10px solid purple;\r\n//         color: black;\r\n//         border:solid 2px white;\r\n//         margin-bottom:2rem;\r\n//         border-radius:6px;\r\n//         padding:2em;\r\n//         -webkit-box-shadow: 16px 17px 0px 0px white;\r\n//         -moz-box-shadow: 16px 17px 0px 0px white;\r\n//         box-shadow: 0 4px 8px 0 rgb(241, 229, 229);\r\n//     }\r\n\r\n//     blockquote p{\r\n//         display:flex;\r\n//         justify-content:center;\r\n//         align-items:center;\r\n//         color:#e1e1e1;\r\n//         font-size:${typeScale.paragraph};\r\n//     }\r\n//     .content-grid{\r\n//         display:grid;\r\n//         grid-template-columns: repeat(2,1fr);\r\n//         gap: 5em;\r\n//     }\r\n\r\n//     .content{\r\n//         margin-top:5em;\r\n//     }\r\n\r\n//     //! MEDIA QUERIES\r\n\r\n//     @media only screen and (min-device-width : 320px) and (max-device-width : 480px) {\r\n\r\n//         main{\r\n//             width:100%;\r\n//             padding:4em;\r\n//             margin:auto;\r\n//         }\r\n//         header{\r\n//             width:100%;\r\n//             height:100%;\r\n//         }\r\n//         span{\r\n//             font-size:${typeScale.header3};\r\n//             color:#e1e1e1;\r\n//             margin-top:-1em;\r\n//         }\r\n//         h2{\r\n//             font-size:${typeScale.header5};\r\n//         }\r\n\r\n//         blockquote{\r\n//             padding:0.7em;\r\n//             border-radius:4px;\r\n//             border:solid 2px #e1e1e1;\r\n//             border-top-left-radius: 6px;\r\n//             border-bottom-left-radius: 6px;\r\n//             border-top-right-radius: 6px;\r\n//             border-bottom-right-radius: 6px;\r\n//             box-shadow: 0 4px 8px 0 rgb(241, 229, 200);\r\n//         }\r\n\r\n//         blockquote p{\r\n//             color:#e1e1e1;\r\n//         }\r\n\r\n//         .content-grid{\r\n//         display:grid;\r\n//         grid-template-columns: repeat(1, 1fr);\r\n//         gap: 2em;\r\n//         width:100%;\r\n//     }\r\n// }\r\n\r\n// `;\r\n\r\n//!repeat(auto-fit, minmax(450px, 1fr));\r\n\r\nexport const ViewDiv = styled.div`\r\n  width: 65%;\r\n  margin: auto;\r\n\r\n  h1 {\r\n    font-family: ${topHeaderFont};\r\n    color: white;\r\n  }\r\n\r\n  header {\r\n    width: 100%;\r\n  }\r\n\r\n  h2 {\r\n    font-family: \"Recursive\", sans-serif;\r\n    font-size: ${typeScale.header3};\r\n    color: #f038ff;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    text-align: center;\r\n    font-family: ${topHeaderFont};\r\n    font-size: ${typeScale.header1};\r\n    color: #f7f7ff;\r\n    padding: 0.8em;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n\r\n  p {\r\n    font-family: ${paragraphFont};\r\n    color: white;\r\n    font-size: ${typeScale.paragraph};\r\n    font-weight: 500;\r\n  }\r\n\r\n  blockquote {\r\n    border-left: 10px solid purple;\r\n    color: black;\r\n    border: solid 2px white;\r\n    margin-bottom: 2rem;\r\n    border-radius: 6px;\r\n    padding: 2em;\r\n    -webkit-box-shadow: 16px 17px 0px 0px white;\r\n    -moz-box-shadow: 16px 17px 0px 0px white;\r\n    box-shadow: 0 4px 8px 0 rgb(241, 229, 229);\r\n  }\r\n\r\n  blockquote p {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #e1e1e1;\r\n    font-size: ${typeScale.paragraph};\r\n  }\r\n  .content-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 5em;\r\n  }\r\n\r\n  .content {\r\n    margin-top: 5em;\r\n  }\r\n\r\n  //! MEDIA QUERIES\r\n\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    width: 90%;\r\n    margin: auto;\r\n\r\n    main {\r\n      width: 100%;\r\n      padding: 0.7em;\r\n      margin: auto;\r\n    }\r\n\r\n    span {\r\n      display: block;\r\n      width: 100%;\r\n      font-size: ${typeScale.mobileSpan};\r\n      color: #e1e1e1;\r\n      margin-top: 0.1em;\r\n      padding: 0.3em;\r\n      text-align: center;\r\n    }\r\n    h2 {\r\n      font-size: ${typeScale.header5};\r\n    }\r\n\r\n    blockquote {\r\n      padding: 0.7em;\r\n      border-radius: 4px;\r\n      border: solid 2px #e1e1e1;\r\n      border-top-left-radius: 6px;\r\n      border-bottom-left-radius: 6px;\r\n      border-top-right-radius: 6px;\r\n      border-bottom-right-radius: 6px;\r\n      box-shadow: 0 4px 8px 0 rgb(241, 229, 200);\r\n    }\r\n\r\n    blockquote p {\r\n      color: #e1e1e1;\r\n    }\r\n\r\n    .content-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(1, 1fr);\r\n      gap: 2em;\r\n      width: 100%;\r\n      margin-bottom: 0.5em;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { topHeaderFont } from \"./typography\";\r\n\r\nexport const GlobalSignin = styled.div`\r\n  h1 {\r\n    font-family: ${topHeaderFont};\r\n    margin-top: 1em;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 60%;\r\n  margin: auto;\r\n  padding-top: 0%;\r\n  padding: auto;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-top: 1em;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  color: white;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { topHeaderFont } from \"./typography\";\r\n\r\nexport const GlobalSignup = styled.div`\r\n  h1 {\r\n    font-family: ${topHeaderFont};\r\n    margin-top: 1em;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 60%;\r\n  margin: auto;\r\n  padding-top: 0%;\r\n  padding: auto;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-top: 1em;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  color: white;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { cardHeader, typeScale, descFont } from \"./typography\";\r\n\r\nexport const PostStyle = styled.div`\r\n  .grid-card {\r\n    cursor: pointer;\r\n    background-color: #171123;\r\n    padding: 0.5em;\r\n    width: 100%;\r\n    margin: auto;\r\n    box-shadow: 0 4px 8px 0 rgb(150, 150, 150);\r\n    border: solid 1px whitesmoke;\r\n    border-radius: 4px;\r\n    min-height: 15em;\r\n    transition: all 0.3s ease 0s;\r\n  }\r\n\r\n  .grid-card:hover {\r\n    transform: translate(0, -5px);\r\n    transition: all 0.3s ease 0s;\r\n  }\r\n\r\n  .grid-card h3 {\r\n    font-variation-settings: \"slnt\" -10, \"CASL\" 0;\r\n    text-align: center;\r\n    font-family: ${cardHeader};\r\n    margin-top: -0.5em;\r\n    display: block;\r\n  }\r\n\r\n  .grid-card h4::hover {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .content {\r\n    padding: 1em;\r\n  }\r\n  .grid-container {\r\n    width: 100%;\r\n    margin: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 3em;\r\n    margin-bottom: 2em;\r\n    margin-top: -0.7em;\r\n  }\r\n\r\n  .card-title {\r\n    color: #f2f230;\r\n    font-size: ${typeScale.cardHeading};\r\n    padding: 0.6em;\r\n  }\r\n\r\n  .card-description {\r\n    font-size: 1.5em;\r\n    display: block;\r\n    text-align: center;\r\n    width: 80%;\r\n    margin: auto;\r\n    margin-top: -0.5em;\r\n    color: #dbd3ad;\r\n    font-weight: 100;\r\n    font-family: ${descFont};\r\n  }\r\n\r\n  //! MEDIA QUERIES\r\n\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    .grid-card {\r\n      min-height: 1rem;\r\n      border-radius: 3px;\r\n      box-shadow: 0 4px 8px 0 rgb(100, 100, 100);\r\n    }\r\n\r\n    .card-title {\r\n      padding: 0.3em;\r\n      text-align: center;\r\n      font-family: ${cardHeader};\r\n      color: #dfa612;\r\n      font-size: ${typeScale.mobileCardHeader};\r\n      font-weight: 600;\r\n    }\r\n\r\n    .grid-card h4::hover {\r\n      text-decoration: none;\r\n    }\r\n\r\n    .grid-container {\r\n      display: grid;\r\n      grid-template-columns: repeat(1, 1fr);\r\n      gap: 2em;\r\n      margin-bottom: 3em;\r\n      margin-top: 4em;\r\n    }\r\n\r\n    .mobile-grid {\r\n      width: 90%;\r\n      margin: auto;\r\n    }\r\n    .card-description {\r\n      text-align: center;\r\n      display: block;\r\n      font-size: ${typeScale.mobileCardDescription};\r\n      font-weight: 400;\r\n    }\r\n  }\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { topHeaderFont } from \"../utils\";\r\n\r\nexport const Global = createGlobalStyle`\r\n\r\n    *{\r\n        box-sizing:border-box;\r\n        margin:0;\r\n        padding:0;\r\n        list-style:none;\r\n        text-decoration:none;\r\n   \r\n    }\r\n\r\n    body{\r\n        height:100vh;\r\n        background-color:#0D0C1D;   \r\n\r\n    }\r\n    main{\r\n        width:95%;\r\n        margin:auto;\r\n    }\r\n    h1 {\r\n    font-family: ${topHeaderFont};\r\n    color: #f7f7ff;\r\n    padding: 1rem;\r\n    text-align: center;\r\n    font-size:3em;\r\n  }\r\n\r\n  h1 {\r\n    @keyframes fadeIn {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transition: all ease 0.5s 0s;\r\n    }\r\n  }\r\n  animation: fadeIn 0.5s;\r\n  }\r\n\r\n  hr{\r\n      border:solid 2px #9c88ff;\r\n      width:100%;\r\n      margin:auto;\r\n      margin-top:-.5rem;\r\n      margin-bottom:4em;\r\n  }\r\n\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px)  {\r\n\r\n    h1 {\r\n    font-family: ${topHeaderFont};\r\n    color: #f7f7ff;\r\n    padding: 1rem;\r\n    display:grid;\r\n    justify-items:center;\r\n    align-items:center;\r\n    margin-top:-.5em;\r\n  }\r\n\r\n  main{\r\n      width:95%;\r\n      margin:auto;\r\n  }\r\n  hr{\r\n      border:solid 1.5px #9c88ff;\r\n      width:100%;\r\n      margin:auto;\r\n      margin-top:-.5rem;\r\n      margin-bottom:3em;\r\n  }\r\n\r\n\r\n  }\r\n\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { cardHeader, yellow } from \"../utils\";\r\n\r\nexport const CategoryStyle = styled.div`\r\n  .gridcard {\r\n    cursor: pointer;\r\n    background-color: #1f1b24;\r\n    padding: 1em;\r\n    width: 100%;\r\n    color: #88c9fb;\r\n    box-shadow: 0 4px 8px 0 rgb(241, 229, 229);\r\n    border: solid 1px whitesmoke;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  .grid-card h4 {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .grid-card h4:hover {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .card-title {\r\n    color: white;\r\n  }\r\n\r\n  .card-title:hover {\r\n    color: white;\r\n    text-decoration: none;\r\n  }\r\n\r\n  main {\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    .grid-card h4 {\r\n      text-align: center;\r\n      font-family: ${cardHeader};\r\n      color: ${yellow[100]};\r\n    }\r\n\r\n    .grid-card h4 {\r\n      text-align: center;\r\n      padding: 1em;\r\n    }\r\n\r\n    .grid-card h4::hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { logoFont, typeScale, yellow } from \"../utils\";\r\nimport {\r\n  topHeaderFont,\r\n  descFont,\r\n  cardHeader,\r\n  paragraphFont,\r\n} from \"./typography\";\r\n\r\nexport const GlobalNavbar = styled.div`\r\n  /* .navi-links li a:hover {\r\n    text-decoration: none;\r\n    color: cyan;\r\n  } */\r\n\r\n  .navi-bar {\r\n    width: 100%;\r\n    height: 5%;\r\n  }\r\n\r\n  ul {\r\n    width: 50%;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    list-style: none;\r\n    padding: 3rem, 2rem, 2rem;\r\n    text-decoration: none;\r\n    border: solid 1px white;\r\n    box-shadow: 5px 5px whitesmoke;\r\n  }\r\n\r\n  .navi-bar {\r\n    display: grid;\r\n    grid-template-columns: repeat(1fr);\r\n  }\r\n\r\n  h2 {\r\n    display: grid;\r\n    justify-items: center;\r\n  }\r\n\r\n  .navi-links {\r\n    list-style: none;\r\n    display: grid;\r\n    align-items: start;\r\n    align-content: center;\r\n    grid-template-columns: repeat(1fr, auto);\r\n    padding: 1em;\r\n    padding-top: 0.5em;\r\n    font-size: 24px;\r\n  }\r\n\r\n  .navi-links a {\r\n    color: #fbf9ff;\r\n    font-family: ${paragraphFont};\r\n    font-weight: 300;\r\n  }\r\n\r\n  .navi-links a:hover {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .cta {\r\n    border: none;\r\n    border-radius: 50px;\r\n    transition: all 0.3s ease 0s;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .cta:hover {\r\n    color: #03dac6;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .cta1 {\r\n    border: none;\r\n    border-radius: 50px;\r\n    transition: all 0.3s ease 0s;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .cta1:hover {\r\n    color: #03dac6;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .logo {\r\n    font-weight: 900;\r\n    font-family: ${topHeaderFont};\r\n    text-transform: uppercase;\r\n    font-size: ${typeScale.header3};\r\n    color: #ffcf00;\r\n    justify-content: flex-start;\r\n    padding-top: 0;\r\n    padding-bottom: 0.7em;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .logo:hover {\r\n    text-decoration: none;\r\n    color: cyan;\r\n  }\r\n\r\n  .cta-signout {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    cursor: pointer;\r\n    color: white;\r\n    padding: 0.2em;\r\n    margin-left: auto;\r\n  }\r\n\r\n  .active {\r\n    border-bottom: solid 2px yellow;\r\n    color: yellow;\r\n  }\r\n\r\n  .cta-signout:hover {\r\n    cursor: pointer;\r\n    color: black;\r\n    border: none;\r\n    background-color: cyan;\r\n  }\r\n  /* @media only screen and (min-device-width: 320px) and (max-device-width: 568px) {\r\n  } */\r\n  @media only screen and (max-width: 768px) {\r\n    .navi-links > li {\r\n      display: inline;\r\n      padding: 1%;\r\n      float: none;\r\n    }\r\n\r\n    .header {\r\n      margin-bottom: 2em;\r\n      text-align: left;\r\n    }\r\n\r\n    ul {\r\n      width: 90%;\r\n      border: solid 1px whitesmoke;\r\n      box-shadow: 3px 3px white;\r\n      margin-bottom: 2em;\r\n      padding: 0.4em;\r\n    }\r\n    .logo {\r\n      margin: 0;\r\n      font-size: ${typeScale.mobileLogo};\r\n      padding-top: 0.2em;\r\n      padding-bottom: 0.6em;\r\n    }\r\n  }\r\n\r\n  /* @media only screen and (max-width: 768px) {\r\n    .logo {\r\n      display: none;\r\n    }\r\n    .cta-signout {\r\n      margin-left: auto;\r\n    }\r\n    .header {\r\n      border: none;\r\n      height: 0;\r\n      width: 0;\r\n    }\r\n    nav {\r\n      overflow: auto;\r\n      position: fixed;\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      bottom: 0;\r\n      width: 100%;\r\n      height: 7vh;\r\n      background: #100b19;\r\n\r\n      border-top: 2px solid #a42cd6;\r\n    }\r\n    .navi-links li a {\r\n      text-align: center;\r\n      font-size: 1em;\r\n      display: block;\r\n      color: whitesmoke;\r\n      padding: 1em;\r\n    }\r\n\r\n    main {\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n  } */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { cardHeader, topHeaderFont } from \"./typography\";\r\n\r\nexport const FullPageStyle = styled.div`\r\n  h2 {\r\n    display: block;\r\n    text-align: center;\r\n    color: #caf7e2;\r\n    font-weight: 500;\r\n    font-size: 3.5em;\r\n    margin-top: 1em;\r\n    font-family: ${cardHeader};\r\n  }\r\n  main {\r\n    width: 85%;\r\n    margin: auto;\r\n  }\r\n\r\n  #logo {\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 20px;\r\n    margin-left: 2em;\r\n    font-weight: 700;\r\n    z-index: 99;\r\n    font-size: 1.9em;\r\n  }\r\n\r\n  #logo > a {\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .strong-logo {\r\n    color: #e0ca3c;\r\n    font-family: ${topHeaderFont};\r\n  }\r\n\r\n  .hero {\r\n    width: 100%;\r\n    padding: 3em;\r\n  }\r\n\r\n  .section {\r\n    background-image: linear-gradient(to top, #09203f 0%, #537895 100%);\r\n  }\r\n\r\n  .welcome {\r\n    font-size: 5em;\r\n  }\r\n\r\n  button {\r\n    background: green;\r\n    align-items: center;\r\n    color: black;\r\n    align-self: center;\r\n  }\r\n  .fp-tableCell {\r\n    display: table-cell;\r\n    vertical-align: text-top;\r\n  }\r\n\r\n  .table-cell-nav {\r\n    position: fixed;\r\n    top: 1%;\r\n    z-index: 20;\r\n    right: 2%;\r\n    letter-spacing: 3px;\r\n    margin-bottom: 2.5em;\r\n    overflow: hidden;\r\n  }\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  ul > li {\r\n    color: white;\r\n    padding: 1em;\r\n    font-weight: 600;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n    font-size: 1.1em;\r\n    list-style: none;\r\n  }\r\n\r\n  li > a:hover {\r\n    border: none;\r\n  }\r\n\r\n  li > a {\r\n    color: whitesmoke;\r\n  }\r\n\r\n  .about {\r\n    color: white;\r\n    text-align: center;\r\n    padding: 2em;\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\r\n    h2 {\r\n      font-size: 2em;\r\n      margin-bottom: 1.5em;\r\n    }\r\n\r\n    .welcome {\r\n      font-size: 3rem;\r\n      text-align: center;\r\n      display: block;\r\n    }\r\n\r\n    #logo {\r\n      font-size: 1.3em;\r\n      text-align: center;\r\n      margin-left: 6em;\r\n    }\r\n\r\n    ul > li {\r\n      padding: 0.5em;\r\n      font-size: 1.1em;\r\n      letter-spacing: 0px;\r\n    }\r\n\r\n    li > a {\r\n      color: whitesmoke;\r\n      padding: 0.5em;\r\n    }\r\n\r\n    .table-cell-nav {\r\n      position: fixed;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      top: 47%;\r\n      z-index: 10;\r\n      margin: auto;\r\n      right: 25%;\r\n      width: 50%;\r\n      letter-spacing: 0px;\r\n      margin-bottom: 2em;\r\n    }\r\n\r\n    .about {\r\n      color: white;\r\n      text-align: center;\r\n      padding: 2em;\r\n    }\r\n\r\n    .hero {\r\n      width: 100%;\r\n      padding: 1em;\r\n    }\r\n\r\n    .about {\r\n      font-size: 2em;\r\n      width: 100%;\r\n      padding: 0;\r\n      margin-top: 3.5em;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ClapSpinner } from \"react-spinners-kit\";\r\n\r\nconst LoadingStyle = styled.div`\r\n  h2 {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    vertical-align: center;\r\n    margin-top: 25%;\r\n  }\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>\r\n      <LoadingStyle>\r\n        <h2>\r\n          <ClapSpinner loading={true} size={40} color=\"#fa26a0\" />\r\n        </h2>\r\n      </LoadingStyle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport UserNav from \"./UserNav\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { quoteFont } from \"../utils/index\";\r\n\r\nconst AboutDiv = styled.div`\r\n  padding: 1em;\r\n  text-align: center;\r\n  background: black;\r\n  width: 100%;\r\n  border: solid white 2px;\r\n  border-left: yellow 5px groove;\r\n  border-top: yellow 5px groove;\r\n  box-shadow: 4px 4px #b4e7ce;\r\n  margin-bottom: 3em;\r\n\r\n  h1 {\r\n    padding: 1rem;\r\n    font-size: 3em;\r\n    color: #ecebf3;\r\n  }\r\n\r\n  h4 {\r\n    width: 80%;\r\n    margin: auto;\r\n    color: grey;\r\n    padding: 1em;\r\n    font-size: 2em;\r\n    border: solid 1px white;\r\n    box-shadow: 3px 3px white;\r\n    margin-top: 1em;\r\n    border-left: yellow 5px groove;\r\n    margin-bottom: 1em;\r\n    font-family: ${quoteFont};\r\n  }\r\n`;\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>About Us</title>\r\n      </Helmet>\r\n      <UserNav />\r\n      <main>\r\n        <h1>About Us</h1>\r\n        <AboutDiv>\r\n          <h1>About Crispinfo</h1>\r\n          <h4>\r\n            Crispinfo is made with love of creating super simple short and vital\r\n            information of topics that are otherwise very clustered and dense\r\n            for eyes to read...\r\n          </h4>\r\n        </AboutDiv>\r\n        <AboutDiv>\r\n          <h1>About Me</h1>\r\n          <h4>\r\n            Hey there I'm <strong>Mohan Singh</strong> ,I love web developement\r\n            ,building web applications and creating content\r\n          </h4>\r\n        </AboutDiv>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Global } from \"./utils\";\r\nimport Loading from \"./components/customComponents/LoadingComponent\";\r\nimport About from \"./Core/About\";\r\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nconst Posts = React.lazy(() => import(\"./components/Posts\"));\r\nconst Categories = React.lazy(() => import(\"./components/Categories\"));\r\nconst ViewLayout = React.lazy(() => import(\"./components/viewLayout\"));\r\nconst HomePage = React.lazy(() => import(\"./Core/HomePage\"));\r\nconst CateBlog = React.lazy(() => import(\"./components/CateBlog\"));\r\nconst AdminDashboard = React.lazy(() => import(\"./admin/AdminDashboard\"));\r\nconst Signin = React.lazy(() => import(\"./components/signin\"));\r\nconst Signup = React.lazy(() => import(\"./components/signup\"));\r\nconst ManagePosts = React.lazy(() => import(\"./admin/ManagePosts\"));\r\nconst SelectCategory = React.lazy(() => import(\"./admin/selectCategory\"));\r\nconst AdminRoute = React.lazy(() => import(\"./auth/helper/AdminRoute\"));\r\nconst Createcategory = React.lazy(() => import(\"./admin/createCategory\"));\r\nconst CreateBlog = React.lazy(() => import(\"./admin/createBlog\"));\r\nconst UpdatePost = React.lazy(() => import(\"./admin/UpdatePost\"));\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div>\r\n      <Global />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <React.Suspense fallback={<Loading />}>\r\n            <Route exact path=\"/\" component={HomePage}></Route>\r\n            <Route path=\"/allposts\" component={Posts}></Route>\r\n            <Route path=\"/about\" component={About}></Route>\r\n            <AdminRoute\r\n              exact\r\n              path=\"/blog/:id/create\"\r\n              component={CreateBlog}\r\n            ></AdminRoute>\r\n            <AdminRoute\r\n              exact\r\n              path=\"/create/category\"\r\n              component={Createcategory}\r\n            ></AdminRoute>\r\n            <AdminRoute\r\n              exact\r\n              path=\"/admin\"\r\n              component={AdminDashboard}\r\n            ></AdminRoute>\r\n            <Route exact path=\"/admin/login\" component={Signin}></Route>\r\n            <Route exact path=\"/user/signup\" component={Signup}></Route>\r\n            <Route exact path=\"/categories\" component={Categories}></Route>\r\n            <Route exact path=\"/blog/:id\" component={ViewLayout}></Route>\r\n            <Route\r\n              exact\r\n              path=\"/category/:id/posts\"\r\n              component={CateBlog}\r\n            ></Route>\r\n            <AdminRoute\r\n              exact\r\n              path=\"/manage/posts\"\r\n              component={ManagePosts}\r\n            ></AdminRoute>\r\n            <AdminRoute\r\n              path=\"/update/post/:id\"\r\n              component={UpdatePost}\r\n            ></AdminRoute>\r\n            <AdminRoute\r\n              path=\"/selectCategory\"\r\n              component={SelectCategory}\r\n            ></AdminRoute>\r\n          </React.Suspense>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}