{"version":3,"sources":["components/signin.js","components/customComponents/ErrorMessage.js"],"names":["React","memo","history","useHistory","useState","email","password","error","success","loading","input","fields","setFields","handleChange","inputValues","event","target","value","onSubmit","preventDefault","setTimeout","signin","then","data","push","authenticate","style","display","justifyContent","marginTop","marginLeft","className","htmlFor","type","placeholder","onChange","size","color","CustomizedSnackbars","Alert","props","elevation","variant","classes","makeStyles","theme","root","spacing","useStyles","open","setOpen","handleClose","reason","autoHideDuration","onClose","severity"],"mappings":"wMA+HeA,cAAMC,MAvHN,WACb,IAAIC,EAAUC,cADK,EAESC,mBAAS,CACnCC,MAAO,GACPC,SAAU,GACVC,OAAO,EACPC,SAAS,EACTC,SAAS,EACTC,OAAO,IARU,mBAEZC,EAFY,KAEJC,EAFI,KAUXP,EAAoCM,EAApCN,MAAOC,EAA6BK,EAA7BL,SAAUC,EAAmBI,EAAnBJ,MAAOE,EAAYE,EAAZF,QAE1BI,EAAe,SAACC,GAAD,OAAiB,SAACC,GACrCH,EAAU,2BAAKD,GAAN,kBAAeG,EAAcC,EAAMC,OAAOC,WAG/CC,EAAW,SAACH,GAChBA,EAAMI,iBAENP,EAAU,2BAAKD,GAAN,IAAcJ,OAAO,EAAOE,SAAS,KAC9CW,YAAW,WACTC,YAAO,CAAEhB,QAAOC,aAAYgB,MAAK,SAACC,GAC5BA,EAAKhB,OACPK,EAAU,2BACLD,GADI,IAEPJ,MAAOgB,EAAKhB,MACZC,SAAS,EACTC,SAAS,KAEXP,EAAQsB,KAAK,iBAEbC,YAAaF,GAAM,WACjBX,EAAU,CACRP,MAAO,GACPC,SAAU,GACVE,SAAS,EACTC,SAAS,EACTF,OAAO,IAETL,EAAQsB,KAAK,qBAIlB,MAGCE,EAAQ,CACZC,QAAS,OACTC,eAAgB,aAChBC,UAAW,QACXC,WAAY,OAyDd,OACE,6BACE,kBAAC,IAAD,MAEA,8BAxCA,kBAAC,WAAD,KACE,kBAAC,eAAD,KACE,6BACE,wBAAIC,UAAU,eAAd,gBAEF,6BACA,kBAAC,OAAD,CAAMb,SAAUA,GACd,yBAAKa,UAAU,cACb,kBAAC,QAAD,CAAOC,QAAQ,sBAAf,SACA,2BACEC,KAAK,OACLhB,MAAOZ,EACP0B,UAAU,eACVG,YAAY,cACZC,SAAUtB,EAAa,YAG3B,yBAAKkB,UAAU,cACb,kBAAC,QAAD,CAAOC,QAAQ,yBAAf,YACA,2BACEC,KAAK,WACLhB,MAAOX,EACPyB,UAAU,eACVG,YAAY,WACZC,SAAUtB,EAAa,eAG3B,kBAAC,SAAD,CAAQkB,UAAU,kBAAkBE,KAAK,UAAzC,WA3CNxB,GACE,0BAAMiB,MAAOA,GACX,kBAAC,gBAAD,CAAeU,KAAM,GAAIC,MAAM,UAAU5B,SAAS,OAOjDF,GAAS,kBAAC,IAAD,CAAqBA,MAAOA,U,8FCxBjC+B,IA1Ca,SAAC,GAAe,IAAb/B,EAAY,EAAZA,MAU7B,SAASgC,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAOtD,IAAMG,EAjBYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,MAAS,OACT,YAAa,CACXjB,UAAWgB,EAAME,QAAQ,QAafC,GAlByB,EAmBjBhD,IAAMI,UAAS,GAnBE,mBAmBlC6C,EAnBkC,KAmB5BC,EAnB4B,KAqBnCC,EAAc,SAACpC,EAAOqC,GACX,cAAXA,GAGJF,GAAQ,IAGV,OACE,yBAAKnB,UAAWY,EAAQG,MACtB,kBAAC,IAAD,CAAUG,KAAMA,EAAMI,iBAAkB,IAAMC,QAASH,GACrD,6BACG,IACD,kBAACZ,EAAD,CAAOgB,SAAS,QAAQD,QAASH,GAC9B5C","file":"static/js/15.c9c0b8c3.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport UserNav from \"../Core/UserNav\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signin, authenticate } from \"../auth/helper\";\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\nimport { GlobalSignin, Form, Button, Label } from \"../utils/index\";\r\nimport CustomizedSnackbars from \"./customComponents/ErrorMessage\";\r\n\r\nconst Signin = () => {\r\n  var history = useHistory();\r\n  const [fields, setFields] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: false,\r\n    success: false,\r\n    loading: false,\r\n    input: false,\r\n  });\r\n  const { email, password, error, loading } = fields;\r\n\r\n  const handleChange = (inputValues) => (event) => {\r\n    setFields({ ...fields, [inputValues]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    //!TODO:Add fields validation\r\n    setFields({ ...fields, error: false, loading: true });\r\n    setTimeout(() => {\r\n      signin({ email, password }).then((data) => {\r\n        if (data.error) {\r\n          setFields({\r\n            ...fields,\r\n            error: data.error,\r\n            success: false,\r\n            loading: false,\r\n          });\r\n          history.push(\"/user/signin\");\r\n        } else {\r\n          authenticate(data, () => {\r\n            setFields({\r\n              email: \"\",\r\n              password: \"\",\r\n              success: true,\r\n              loading: false,\r\n              error: false,\r\n            });\r\n            history.push(\"/allPosts\");\r\n          });\r\n        }\r\n      });\r\n    }, 3000);\r\n  };\r\n\r\n  const style = {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    marginTop: \"-36px\",\r\n    marginLeft: \"4em\",\r\n  };\r\n\r\n  const loadingMesage = () => {\r\n    return (\r\n      loading && (\r\n        <main style={style}>\r\n          <RotateSpinner size={40} color=\"#fa26a0\" loading={true} />\r\n        </main>\r\n      )\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return error && <CustomizedSnackbars error={error} />;\r\n  };\r\n\r\n  //!STYLES\r\n\r\n  const signinForm = () => {\r\n    return (\r\n      <Fragment>\r\n        <GlobalSignin>\r\n          <div>\r\n            <h1 className=\"text-center\">Signin Page</h1>\r\n          </div>\r\n          <hr />\r\n          <Form onSubmit={onSubmit}>\r\n            <div className=\"form-group\">\r\n              <Label htmlFor=\"exampleInputEmail1\">Email</Label>\r\n              <input\r\n                type=\"text\"\r\n                value={email}\r\n                className=\"form-control\"\r\n                placeholder=\"Enter Email\"\r\n                onChange={handleChange(\"email\")}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Label htmlFor=\"exampleInputPassword1\">Password</Label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange(\"password\")}\r\n              />\r\n            </div>\r\n            <Button className=\"btn btn-primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          {loadingMesage()}\r\n        </GlobalSignin>\r\n      </Fragment>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <UserNav />\r\n\r\n      <main>\r\n        {signinForm()}\r\n        {errorMessage()}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Signin);\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nconst CustomizedSnackbars = ({ error }) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"width\": \"100%\",\r\n      \"& > * + *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={8} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  function GrowTransition(props) {\r\n    return <Grow {...props} />;\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={9000} onClose={handleClose}>\r\n        <div>\r\n          {\" \"}\r\n          <Alert severity=\"error\" onClose={handleClose}>\r\n            {error}\r\n          </Alert>\r\n        </div>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbars;\r\n"],"sourceRoot":""}