{"version":3,"sources":["components/signup.js","components/customComponents/ErrorMessage.js"],"names":["Signup","history","useHistory","useState","email","name","password","error","success","loading","input","fields","setFields","handleChange","inputValues","event","target","value","onSubmit","preventDefault","setTimeout","signup","then","data","push","style","display","justifyContent","marginTop","marginLeft","className","htmlFor","type","onChange","placeholder","size","color","CustomizedSnackbars","Alert","props","elevation","variant","classes","makeStyles","theme","root","spacing","useStyles","React","open","setOpen","handleClose","reason","autoHideDuration","onClose","severity"],"mappings":"wMAsIeA,UA9HA,WACb,IAAIC,EAAUC,cADK,EAESC,mBAAS,CACnCC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,OAAO,EACPC,SAAS,EACTC,SAAS,EACTC,OAAO,IATU,mBAEZC,EAFY,KAEJC,EAFI,KAYXP,EAA0CM,EAA1CN,KAAMD,EAAoCO,EAApCP,MAAOE,EAA6BK,EAA7BL,SAAUG,EAAmBE,EAAnBF,QAASF,EAAUI,EAAVJ,MAElCM,EAAe,SAACC,GAAD,OAAiB,SAACC,GACrCH,EAAU,2BAAKD,GAAN,gBAAcJ,OAAO,GAAQO,EAAcC,EAAMC,OAAOC,WAG7DC,EAAW,SAACH,GAChBA,EAAMI,iBAENP,EAAU,2BAAKD,GAAN,IAAcJ,OAAO,EAAOE,SAAS,KAC9CW,YAAW,WACTC,YAAO,CAAEhB,OAAMD,QAAOE,aAAYgB,MAAK,SAACC,GAClCA,EAAKhB,OACPK,EAAU,2BACLD,GADI,IAGPJ,MAAOgB,EAAKhB,MACZE,SAAS,KAEXR,EAAQuB,KAAK,kBAEbZ,EAAU,CACRR,MAAO,GACPE,SAAU,GACVE,SAAS,EACTC,SAAS,EACTF,OAAO,IAGTN,EAAQuB,KAAK,mBAGhB,MAGCC,EAAQ,CACZC,QAAS,OACTC,eAAgB,aAChBC,UAAW,QACXC,WAAY,OA+Dd,OACE,6BACE,kBAAC,IAAD,MACA,8BACE,wBAAIC,UAAU,eAAd,eAhDF,kBAAC,WAAD,KACE,6BACA,kBAAC,eAAD,KACE,wBAAIA,UAAU,0BAAd,eACA,kBAAC,OAAD,CAAMZ,SAAUA,GACd,yBAAKY,UAAU,cACb,kBAAC,QAAD,CAAOC,QAAQ,sBAAf,SACA,2BACEC,KAAK,OACLC,SAAUpB,EAAa,QACvBI,MAAOZ,EACPyB,UAAU,eACVI,YAAY,gBAGhB,yBAAKJ,UAAU,cACb,kBAAC,QAAD,CAAOC,QAAQ,sBAAf,iBACA,2BACEC,KAAK,QACLC,SAAUpB,EAAa,SACvBI,MAAOb,EACP0B,UAAU,eACVI,YAAY,iBAGhB,yBAAKJ,UAAU,cACb,kBAAC,QAAD,CAAOC,QAAQ,yBAAf,YACA,2BACEE,SAAUpB,EAAa,YACvBI,MAAOX,EACP0B,KAAK,WACLF,UAAU,eACVI,YAAY,cAGhB,kBAAC,SAAD,CAAQF,KAAK,SAASF,UAAU,mBAAhC,WAjDNrB,GACE,yBAAKgB,MAAOA,GACV,kBAAC,gBAAD,CAAeU,KAAM,GAAIC,MAAM,UAAU3B,SAAS,OAOjDF,GAAS,kBAAC,IAAD,CAAqBA,MAAOA,Q,8FCzBjC8B,IA1Ca,SAAC,GAAe,IAAb9B,EAAY,EAAZA,MAU7B,SAAS+B,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAOtD,IAAMG,EAjBYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,MAAS,OACT,YAAa,CACXjB,UAAWgB,EAAME,QAAQ,QAafC,GAlByB,EAmBjBC,IAAM7C,UAAS,GAnBE,mBAmBlC8C,EAnBkC,KAmB5BC,EAnB4B,KAqBnCC,EAAc,SAACpC,EAAOqC,GACX,cAAXA,GAGJF,GAAQ,IAGV,OACE,yBAAKpB,UAAWY,EAAQG,MACtB,kBAAC,IAAD,CAAUI,KAAMA,EAAMI,iBAAkB,IAAMC,QAASH,GACrD,6BACG,IACD,kBAACb,EAAD,CAAOiB,SAAS,QAAQD,QAASH,GAC9B5C","file":"static/js/16.64cddd9c.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport UserNav from \"../Core/UserNav\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\nimport CustomizedSnackbars from \"./customComponents/ErrorMessage\";\r\nimport { Form, Button, Label, GlobalSignup } from \"../utils/index\";\r\nimport { signup } from \"../auth/helper\";\r\n\r\nconst Signup = () => {\r\n  var history = useHistory();\r\n  const [fields, setFields] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    error: false,\r\n    success: false,\r\n    loading: false,\r\n    input: false,\r\n  });\r\n\r\n  const { name, email, password, loading, error } = fields;\r\n\r\n  const handleChange = (inputValues) => (event) => {\r\n    setFields({ ...fields, error: false, [inputValues]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    //!TODO:Add fields validation\r\n    setFields({ ...fields, error: false, loading: true });\r\n    setTimeout(() => {\r\n      signup({ name, email, password }).then((data) => {\r\n        if (data.error) {\r\n          setFields({\r\n            ...fields,\r\n\r\n            error: data.error,\r\n            loading: false,\r\n          });\r\n          history.push(\"/user/signup\");\r\n        } else {\r\n          setFields({\r\n            email: \"\",\r\n            password: \"\",\r\n            success: true,\r\n            loading: false,\r\n            error: false,\r\n          });\r\n\r\n          history.push(\"/allPosts\");\r\n        }\r\n      });\r\n    }, 3000);\r\n  };\r\n\r\n  const style = {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    marginTop: \"-36px\",\r\n    marginLeft: \"4em\",\r\n  };\r\n\r\n  const loadingMesage = () => {\r\n    return (\r\n      loading && (\r\n        <div style={style}>\r\n          <RotateSpinner size={40} color=\"#fa26a0\" loading={true} />\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return error && <CustomizedSnackbars error={error} />;\r\n  };\r\n\r\n  const signupForm = () => {\r\n    return (\r\n      <Fragment>\r\n        <hr />\r\n        <GlobalSignup>\r\n          <h2 className=\"text-center text-white\">Signup Page</h2>\r\n          <Form onSubmit={onSubmit}>\r\n            <div className=\"form-group\">\r\n              <Label htmlFor=\"exampleInputEmail1\"> Name</Label>\r\n              <input\r\n                type=\"name\"\r\n                onChange={handleChange(\"name\")}\r\n                value={name}\r\n                className=\"form-control\"\r\n                placeholder=\"Enter Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Label htmlFor=\"exampleInputEmail1\">Email address</Label>\r\n              <input\r\n                type=\"email\"\r\n                onChange={handleChange(\"email\")}\r\n                value={email}\r\n                className=\"form-control\"\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Label htmlFor=\"exampleInputPassword1\">Password</Label>\r\n              <input\r\n                onChange={handleChange(\"password\")}\r\n                value={password}\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <Button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          {loadingMesage()}\r\n        </GlobalSignup>\r\n      </Fragment>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <UserNav />\r\n      <main>\r\n        <h1 className=\"text-center\">SIGNUP PAGE</h1>\r\n        {signupForm()}\r\n        {errorMessage()}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nconst CustomizedSnackbars = ({ error }) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"width\": \"100%\",\r\n      \"& > * + *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={8} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  function GrowTransition(props) {\r\n    return <Grow {...props} />;\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={9000} onClose={handleClose}>\r\n        <div>\r\n          {\" \"}\r\n          <Alert severity=\"error\" onClose={handleClose}>\r\n            {error}\r\n          </Alert>\r\n        </div>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbars;\r\n"],"sourceRoot":""}